apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 3
  labels:
    app: nodered
  name: nodered
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nodered
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nodered
    spec:
      containers:
      - image: nodered/node-red
        imagePullPolicy: Always
        name: node-red
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2024-11-10T16:12:36Z"
  labels:
    app: nodered
    argocd.argoproj.io/instance: nodered-invent
  name: nodered
  namespace: default
  resourceVersion: "4547747"
  uid: 5bd35a8e-fe1c-4d52-afc3-2ed52fff1b40
spec:
  clusterIP: 10.152.183.226
  clusterIPs:
  - 10.152.183.226
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - port: 1880
    protocol: TCP
    targetPort: 1880
  selector:
    app: nodered
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
